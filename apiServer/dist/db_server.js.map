{"version":3,"sources":["../src/db_server.js"],"names":["fastify","require","port","url","dbName","use","register","err","console","log","post","req","reply","OrderId","parseInt","params","id","Name","body","DishName","unit","MongoClient","connect","client","db","collection","find","toArray","docs","length","findOneAndUpdate","$push","MenuList","List","send","close","findOne","menuList","name","menu","list","push","update","$set","$pull","listen"],"mappings":"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","file":"db_server.js","sourcesContent":["import cors from 'cors';\nimport { MongoClient } from 'mongodb';\n\nconst fastify = require('fastify')();\nconst port = 1956;\n\n// Connection URL\nconst url = 'mongodb://localhost:27017';\n\n// Database Name\nconst dbName = 'NowOrder';\n\nfastify.use(cors());\nfastify.register(require('./Modules/Order/'), (err) => {\n  if (err) console.log(err);\n});\n\n/* fastify.post('/api/Orders/finish/', (req, reply) => {\n  const OrderId = parseInt(req.body.OrderId, 10);\n\n  MongoClient.connect(url, (err, client) => {\n    const db = client.db(dbName);\n    const collection = db.collection('orders');\n    collection.update({ OrderId }, {\n      $set: {\n        Status: 'Ordered',\n      },\n    }, (err, result) => {\n      if (err) return console.log(err);\n      reply.send(`Ordered OrderId : ${OrderId}`);\n      client.close();\n      console.log(result.result, `Ordered OrderId : ${OrderId}`);\n    });\n  });\n});\n*/\n// --------------------------///\n\nfastify.post('/api/Orders/:id', (req, reply) => {\n  const OrderId = parseInt(req.params.id);\n  const Name = req.body.Name;\n  const DishName = req.body.DishName;\n  const unit = req.body.unit;\n  MongoClient.connect(url, (err, client) => {\n    const db = client.db(dbName);\n    const collection = db.collection('orders');\n    if (err) return console.log(err);\n    collection.find({ OrderId, 'MenuList.DishName': DishName }).toArray((err, docs) => {\n      if (err) return console.log(err);\n      if (docs.length <= 0) {\n        collection.findOneAndUpdate({ OrderId }, {\n          $push: {\n            MenuList: {\n              DishName,\n              List: [{\n                Name,\n                unit,\n              }],\n            },\n          },\n        });\n        reply.send(`Add OrderId : ${OrderId}`);\n        console.log(`Add OrderId : ${OrderId}`);\n        client.close();\n      } else {\n        collection.findOne({ OrderId }, { MenuList: 1 }, (err, docs) => {\n          if (err) return console.log(err);\n          const menuList = docs.MenuList;\n          const name = DishName;\n          const menu = menuList.find(list => list.DishName === name);\n          menu.List.push({ Name, unit });\n          collection.update({ OrderId, 'MenuList.DishName': DishName }, { $set: { 'MenuList.$.List': menu.List } });\n          console.log(`Add OrderId : ${OrderId}`);\n          reply.send(`Add OrderId : ${OrderId}`);\n          client.close();\n        });\n      }\n    });\n  });\n});\n\nfastify.post('/api/Orders/dishdel/:id', (req, reply) => {\n  const OrderId = parseInt(req.params.id, 10);\n  const Name = req.body.Name;\n  const DishName = req.body.DishName;\n  MongoClient.connect(url, (err, client) => {\n    const db = client.db(dbName);\n    const collection = db.collection('orders');\n    if (err) return console.log(err);\n    collection.update({ OrderId, 'MenuList.DishName': DishName }, { $pull: { 'MenuList.$.List': { Name } } });\n    console.log(`Delete ${Name} from OrderId : ${OrderId}`);\n    reply.send(`Delete ${Name} from OrderId : ${OrderId}`);\n    client.close();\n  });\n});\n\nfastify.listen(port, 'localhost', (err) => {\n  if (err) throw err;\n  console.log(`Server Runing on ${port}`);\n});\n"]}